01500113 // ADDI x2,  x0, 21    (x2  = 0x15)
02700193 // ADDI x3,  x0, 39    (x3  = 0x27)
02A00293 // ADDI x5,  x0, 42    (x5  = 0x2a)
01000313 // ADDI x6,  x0, 16    (x6  = 0x10)
00300413 // ADDI x8,  x0, 3     (x8  = 0x3)
00100493 // ADDI x9,  x0, 1     (x9  = 0x1)
00500593 // ADDI x11, x0, 5     (x11 = 0x5)
00700613 // ADDI x12, x0, 7     (x12 = 0x7)
00800713 // ADDI x14, x0, 8     (x14 = 0x8)
00900793 // ADDI x15, x0, 9     (x15 = 0x9)
00C00893 // ADDI x17, x0, 12    (x17 = 0xc)
00D00913 // ADDI x18, x0, 13    (x18 = 0xd)
00E00A13 // ADDI x20, x0, 14    (x20 = 0xe)
00400A93 // ADDI x21, x0, 4     (x21 = 0x4)
00F00B93 // ADDI x23, x0, 15    (x23 = 0xf)
01100C13 // ADDI x24, x0, 17    (x24 = 0x11)
01200D13 // ADDI x26, x0, 18    (x26 = 0x12)
01300D93 // ADDI x27, x0, 19    (x27 = 0x13)
01400E93 // ADDI x29, x0, 20    (x29 = 0x14)
01600F13 // ADDI x30, x0, 22    (x30 = 0x16)
003100B3 // ADD  x1,  x2,  x3   (x1  = x2 + x3)
40628233 // SUB  x4,  x5,  x6   (x4  = x5 - x6)
009413B3 // SLL  x7,  x8,  x9   (x7  = x8 << (x9 & 0x1F))
00C5A533 // SLT  x10, x11, x12  (x10 = (x11 < x12) ? 1 : 0)
00F736B3 // SLTU x13, x14, x15  (x13 = (unsigned)x14 < x15)
0128C833 // XOR  x16, x17, x18  (x16 = x17 ^ x18)
015A59B3 // SRL  x19, x20, x21  (x19 = x20 >> (x21 & 0x1F))
418BDB33 // SRA  x22, x23, x24  (x22 = x23 >> (x24 & 0x1F)) arithmetic
01BD6CB3 // OR   x25, x26, x27  (x25 = x26 | x27)
01EEFE33 // AND  x28, x29, x30  (x28 = x29 & x30)
